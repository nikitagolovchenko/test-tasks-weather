{"version":3,"sources":["store/types.ts","components/Progress.tsx","components/Header.tsx","components/Wrapper.tsx","store/actions/weatherActions.ts","components/WeatherCard.tsx","components/UserWeather.tsx","components/Search.tsx","components/CityList.tsx","App.tsx","store/reducers/weatherReducer.ts","store/reducers/rootReducer.ts","store/store.ts","index.tsx"],"names":["WeatherActions","Progress","loading","Box","position","top","left","width","zIndex","LinearProgress","color","Header","AppBar","Toolbar","Typography","variant","ml","moment","format","Wrapper","children","overflow","CssBaseline","component","py","Container","maxWidth","weatherLoading","type","WEATHER_LOADING","payload","weatherError","message","WEATHER_ERROR","useStyles","makeStyles","theme","card","cardMenu","spacing","right","WeatherCard","props","React","useState","anchorEl","setAnchorEl","open","Boolean","classes","Card","className","CardContent","primaryMain","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","onClose","MenuItem","deleteCard","display","alignItems","flexShrink","noWrap","name","sys","country","src","process","weather","icon","alt","description","Grid","container","item","xs","main","temp","temp_min","temp_max","wind","speed","UserWeather","useSelector","state","mb","geolocation","error","Alert","severity","Divider","form","marginBottom","formGroup","formBtn","height","minHeight","marginLeft","formInput","flexGrow","Search","dispatch","useDispatch","city","setCity","onSubmit","e","preventDefault","getState","a","axios","get","data","CITIES_SUCCESS","citiesSuccess","trim","TextField","label","value","onChange","target","Button","size","CityList","CITIES_DELETE","citiesDelete","cities","map","el","index","Grow","in","style","transformOrigin","timeout","key","App","useEffect","REMOVE_ERROR","navigator","getCurrentPosition","coords","latitude","longitude","GEOLOCATION_SUCCESS","GEOLOCATION_ERROR","initialState","weatherReducer","action","correctCity","find","filter","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f69cef63.chunk.js","sourcesContent":["export interface Weather {\r\n  coord: {\r\n    lon: number;\r\n    lat: number;\r\n  };\r\n  weather: {\r\n    id: number;\r\n    main: string;\r\n    description: string;\r\n    icon: string;\r\n  }[];\r\n  base: string;\r\n  main: {\r\n    temp: number;\r\n    pressure: number;\r\n    humidity: number;\r\n    temp_min: number;\r\n    temp_max: number;\r\n  };\r\n  visibility: number;\r\n  wind: {\r\n    speed: number;\r\n    deg: number;\r\n  };\r\n  clouds: {\r\n    all: number;\r\n  };\r\n  dt: number;\r\n  sys: {\r\n    type: number;\r\n    id: number;\r\n    message: number;\r\n    country: string;\r\n    sunrise: number;\r\n    sunset: number;\r\n  };\r\n  id: number;\r\n  name: string;\r\n  cod: number;\r\n}\r\n\r\nexport enum WeatherActions {\r\n  WEATHER_LOADING = 'WEATHER_LOADING',\r\n  WEATHER_ERROR = 'WEATHER_ERROR',\r\n  GEOLOCATION_SUCCESS = 'GEOLOCATION_SUCCESS',\r\n  GEOLOCATION_ERROR = 'GEOLOCATION_ERROR',\r\n  CITIES_SUCCESS = 'CITIES_SUCCESS',\r\n  CITIES_DELETE = 'CITIES_DELETE',\r\n  REMOVE_ERROR = 'REMOVE_ERROR'\r\n}\r\n\r\nexport interface WeatherState {\r\n  loading: boolean;\r\n  error: string;\r\n  geolocation: {\r\n    weather: Weather | null;\r\n    error: string;\r\n  };\r\n  cities: Weather[];\r\n}\r\n\r\ninterface WeatherLoadingAction {\r\n  type: WeatherActions.WEATHER_LOADING;\r\n  payload: boolean;\r\n}\r\n\r\ninterface WeatherErrorAction {\r\n  type: WeatherActions.WEATHER_ERROR;\r\n  payload: string;\r\n}\r\n\r\ninterface GeolocationErrorAction {\r\n  type: WeatherActions.GEOLOCATION_ERROR;\r\n  payload: string;\r\n}\r\n\r\ninterface GeolocationSuccessAction {\r\n  type: WeatherActions.GEOLOCATION_SUCCESS;\r\n  payload: Weather;\r\n}\r\n\r\ninterface CitiesSuccessAction {\r\n  type: WeatherActions.CITIES_SUCCESS;\r\n  payload: Weather;\r\n}\r\n\r\ninterface CitiesDelete {\r\n  type: WeatherActions.CITIES_DELETE;\r\n  payload: number;\r\n}\r\n\r\ninterface RemoveError {\r\n  type: WeatherActions.REMOVE_ERROR;\r\n}\r\n\r\nexport type WeatherAction =\r\n  | WeatherLoadingAction\r\n  | WeatherErrorAction\r\n  | GeolocationErrorAction\r\n  | GeolocationSuccessAction\r\n  | CitiesSuccessAction\r\n  | CitiesDelete\r\n  | RemoveError;\r\n","import { Box, LinearProgress } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\ninterface ProgressProps {\r\n  loading: boolean;\r\n}\r\n\r\nconst Progress: React.FC<ProgressProps> = ({ loading }) => {\r\n  return loading ? (\r\n    <Box position='absolute' top='0' left='0' width='100%' zIndex='modal'>\r\n      <LinearProgress color='secondary' />\r\n    </Box>\r\n  ) : null;\r\n};\r\n\r\nexport default Progress;\r\n","import {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Box,\r\n} from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <AppBar position='static'>\r\n      <Toolbar>\r\n        <Typography variant='h6'>React Weather App</Typography>\r\n        <Box ml='auto'>{moment().format('dddd')} - {moment().format(\"MMM Do YY\")}</Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Box, Container, CssBaseline } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Header from './Header';\r\n\r\nconst Wrapper: React.FC = ({ children }) => {\r\n  return (\r\n    <Box position='relative' width='100%' overflow='hidden'>\r\n      <CssBaseline />\r\n      <Header />\r\n      <Box component='main' py={2}>\r\n        <Container maxWidth='md'>\r\n          <>{children}</>\r\n        </Container>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import axios from 'axios';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { RootState } from '../reducers/rootReducer';\r\nimport { WeatherAction, WeatherActions } from '../types';\r\n\r\nexport const getGeolocation = (): ThunkAction<\r\n  void,\r\n  RootState,\r\n  null,\r\n  WeatherAction\r\n> => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(weatherLoading(true));\r\n\r\n    try {\r\n      navigator.geolocation.getCurrentPosition(\r\n        async position => {\r\n          const { latitude, longitude } = position.coords;\r\n          const { data } = await axios.get(\r\n            `${\r\n              process.env.REACT_APP_API_URL\r\n            }?lat=${latitude}&lon=${longitude}&appid=${\r\n              process.env.REACT_APP_API_KEY\r\n            }&units=metric`\r\n          );\r\n\r\n          dispatch({\r\n            type: WeatherActions.GEOLOCATION_SUCCESS,\r\n            payload: data,\r\n          });\r\n          dispatch(weatherLoading(false));\r\n        },\r\n        position => {\r\n          dispatch({\r\n            type: WeatherActions.GEOLOCATION_ERROR,\r\n            payload: position.message,\r\n          });\r\n          dispatch(weatherLoading(false));\r\n        }\r\n      );\r\n    } catch (error) {\r\n      dispatch(weatherError(error.message));\r\n      dispatch(weatherLoading(false));\r\n    }\r\n  };\r\n};\r\n\r\nexport const citiesSuccess = (\r\n  city: string\r\n): ThunkAction<void, RootState, null, WeatherAction> => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(weatherLoading(true));\r\n\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${\r\n          process.env.REACT_APP_API_URL\r\n        }?q=${city}&appid=${\r\n          process.env.REACT_APP_API_KEY\r\n        }&units=metric`\r\n      );\r\n\r\n      dispatch({\r\n        type: WeatherActions.CITIES_SUCCESS,\r\n        payload: data,\r\n      });\r\n      dispatch(weatherLoading(false));\r\n    } catch (error) {\r\n      dispatch(weatherError(error.message));\r\n      dispatch(weatherLoading(false));\r\n    }\r\n  };\r\n};\r\n\r\nexport const citiesDelete = (id: number): WeatherAction => {\r\n  return {\r\n    type: WeatherActions.CITIES_DELETE,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const weatherLoading = (loading: boolean): WeatherAction => {\r\n  return {\r\n    type: WeatherActions.WEATHER_LOADING,\r\n    payload: loading,\r\n  };\r\n};\r\n\r\nexport const weatherError = (message: string): WeatherAction => {\r\n  return {\r\n    type: WeatherActions.WEATHER_ERROR,\r\n    payload: message,\r\n  };\r\n};\r\n\r\n\r\nexport const removeError = ():WeatherAction => {\r\n  return {\r\n    type: WeatherActions.REMOVE_ERROR\r\n  }\r\n}","import {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  makeStyles,\r\n  Theme,\r\n} from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport React, { useState } from 'react';\r\nimport { Weather } from '../store/types';\r\n\r\ninterface WeatherCardProps extends Weather {\r\n  primaryMain?: boolean;\r\n  deleteCard?: (id: number) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  card: {\r\n    position: 'relative',\r\n  },\r\n  cardMenu: {\r\n    position: 'absolute',\r\n    top: theme.spacing(2),\r\n    right: theme.spacing(0),\r\n  },\r\n}));\r\n\r\nconst WeatherCard: React.FC<WeatherCardProps> = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const classes = useStyles();\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    if (props.deleteCard) {\r\n      props.deleteCard(props.id);\r\n    }\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        {!props.primaryMain && (\r\n          <Box className={classes.cardMenu}>\r\n            <IconButton\r\n              aria-label='more'\r\n              aria-controls='long-menu'\r\n              aria-haspopup='true'\r\n              onClick={handleClick}\r\n            >\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id='long-menu'\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={open}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleMenuClose}>delete</MenuItem>\r\n            </Menu>\r\n          </Box>\r\n        )}\r\n        <Box display='flex' alignItems='center'>\r\n          <Box flexShrink='0'>\r\n            <Typography\r\n              variant={props.primaryMain ? 'h4' : 'h5'}\r\n              color={props.primaryMain ? 'primary' : 'textPrimary'}\r\n              noWrap\r\n            >\r\n              {props.name} - {props.sys.country}\r\n            </Typography>\r\n          </Box>\r\n          <Box ml={2} display='flex' alignItems='center'>\r\n            <img\r\n              src={`${process.env.REACT_APP_API_IMG}/${props.weather[0].icon}.png`}\r\n              alt={props.weather[0].description}\r\n            />\r\n            <Typography>{props.weather[0].description}</Typography>\r\n          </Box>\r\n        </Box>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Typography variant={props.primaryMain ? 'h5' : 'h6'}>\r\n              Temp\r\n            </Typography>\r\n            <Typography>\r\n              temp: <strong>{props.main.temp}</strong> &#8451;\r\n            </Typography>\r\n            <Typography>\r\n              temp-min: <strong>{props.main.temp_min}</strong> &#8451;\r\n            </Typography>\r\n            <Typography>\r\n              temp-max: <strong>{props.main.temp_max}</strong> &#8451;\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography variant='h5'>Wind</Typography>\r\n            <Typography>\r\n              wind speed: <strong>{props.wind.speed}</strong> m/s\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import { Box, Divider } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../store/reducers/rootReducer';\r\nimport Weather from './WeatherCard';\r\n\r\nconst UserWeather: React.FC = () => {\r\n  const weather = useSelector((state: RootState) => state.weather);\r\n\r\n  return (\r\n    <>\r\n      <Box mb={3}>\r\n        {weather.geolocation.error && (\r\n          <Alert severity='info'>{weather.geolocation.error}</Alert>\r\n        )}\r\n        {weather.geolocation.weather && (\r\n          <Weather {...weather.geolocation.weather} primaryMain={true} />\r\n        )}\r\n      </Box>\r\n      <Box mb={3}>\r\n        <Divider />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserWeather;\r\n","import { Box, TextField, Button, makeStyles, Theme } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { citiesSuccess } from '../store/actions/weatherActions';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  form: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  formGroup: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  formBtn: {\r\n    height: '100%',\r\n    minHeight: '100%',\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  formInput: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Search: React.FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [city, setCity] = useState<string>('');\r\n\r\n  const changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCity(e.target.value);\r\n  };\r\n\r\n  const sumbitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (city) {\r\n      dispatch(citiesSuccess(city.trim()));\r\n      setCity('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={sumbitHandler}>\r\n      <Box className={classes.formGroup}>\r\n        <TextField\r\n          label='Add city'\r\n          variant='outlined'\r\n          className={classes.formInput}\r\n          value={city}\r\n          onChange={changeHandler}\r\n        />\r\n        <Button\r\n          className={classes.formBtn}\r\n          type='submit'\r\n          variant='contained'\r\n          size='large'\r\n          color='primary'\r\n        >\r\n          Search\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { Grid, Grow, Box } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { citiesDelete } from '../store/actions/weatherActions';\r\nimport { RootState } from '../store/reducers/rootReducer';\r\nimport Weather from './WeatherCard';\r\n\r\nconst CityList: React.FC = () => {\r\n  const weather = useSelector((state: RootState) => state.weather);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteCard = (id: number): void => {\r\n    dispatch(citiesDelete(id));\r\n  };\r\n\r\n  return (\r\n    <Box mb={3}>\r\n      {!weather.cities && (\r\n        <Alert severity='info'>You don't have cities</Alert>\r\n      )}\r\n      {weather.cities && (\r\n        <Grid container spacing={2}>\r\n          {weather.cities.map((el, index) => (\r\n            <Grow\r\n              in={true}\r\n              style={{ transformOrigin: '0 0 0' }}\r\n              {...(true ? { timeout: 1000 + index * 300 } : {})}\r\n              key={index}\r\n            >\r\n              <Grid item xs={6}>\r\n                <Weather {...el} deleteCard={deleteCard} />\r\n              </Grid>\r\n            </Grow>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CityList;\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Progress from './components/Progress';\nimport Wrapper from './components/Wrapper';\nimport { RootState } from './store/reducers/rootReducer';\nimport { getGeolocation, removeError } from './store/actions/weatherActions';\nimport UserWeather from './components/UserWeather';\nimport Search from './components/Search';\nimport CityList from './components/CityList';\nimport { Alert } from '@material-ui/lab';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const weather = useSelector((state: RootState) => state.weather);\n\n  useEffect(() => {\n    dispatch(removeError());\n    dispatch(getGeolocation());\n  }, []);\n\n  return (\n    <Wrapper>\n      <Progress loading={weather.loading} />\n      <UserWeather />\n      <Search />\n      {weather.error && <Alert severity='error'>{weather.error}</Alert>}\n      <CityList />\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import { WeatherAction, WeatherActions, WeatherState } from '../types';\r\n\r\nconst initialState: WeatherState = {\r\n  loading: false,\r\n  error: '',\r\n  geolocation: {\r\n    weather: null,\r\n    error: '',\r\n  },\r\n  cities: [],\r\n};\r\n\r\nconst weatherReducer = (\r\n  state = initialState,\r\n  action: WeatherAction\r\n): WeatherState => {\r\n  switch (action.type) {\r\n    case WeatherActions.WEATHER_ERROR:\r\n      return { ...state, error: action.payload };\r\n\r\n    case WeatherActions.WEATHER_LOADING:\r\n      return { ...state, loading: action.payload };\r\n\r\n    case WeatherActions.GEOLOCATION_ERROR:\r\n      return {\r\n        ...state,\r\n        geolocation: { weather: null, error: action.payload },\r\n      };\r\n\r\n    case WeatherActions.GEOLOCATION_SUCCESS:\r\n      return { ...state, geolocation: { weather: action.payload, error: '' } };\r\n\r\n    case WeatherActions.CITIES_SUCCESS:\r\n      const correctCity = state.cities\r\n        ? state.cities.find(el => el.id === action.payload.id)\r\n        : [];\r\n\r\n      if (!correctCity) {\r\n        return {\r\n          ...state,\r\n          cities: [...state.cities, action.payload],\r\n          error: '',\r\n        };\r\n      } else {\r\n        return { ...state, error: '' };\r\n      }\r\n\r\n    case WeatherActions.CITIES_DELETE:\r\n      return {\r\n        ...state,\r\n        cities: state.cities.filter(el => el.id !== action.payload),\r\n      };\r\n\r\n    case WeatherActions.REMOVE_ERROR:\r\n      return { ...state, error: '' };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default weatherReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport weatherReducer from \"./weatherReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  weather: weatherReducer\r\n})\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;","import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer, { RootState } from './reducers/rootReducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { PersistPartial } from 'redux-persist/es/persistReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = createStore<RootState & PersistPartial, any, any, any>(\r\n  persistedReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { store, persistor } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}